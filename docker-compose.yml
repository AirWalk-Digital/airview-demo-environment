version: "3.9"
   
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  api:
    build:
      context: .
      dockerfile: dockerfile.api
    environment:
      - DB_CONN_STR=postgresql://postgres:postgres@db/postgres
    depends_on:
      - db

  gitproxy:
    build:
      context: .
      dockerfile: dockerfile.gitproxy
    ports:
      - "8888:7071"
    environment:
      - GITHUB_CLIENT_SECRET
      - GITHUB_CLIENT_ID
      - ADO_CLIENT_ID
      - ADO_CLIENT_SECRET
      - ADO_CALLBACK_URL
      - SIGNING_KEY
      
  exclusion_engine:
    build:
      context: exclusionmock 
      dockerfile: dockerfile
    depends_on:
      - api
    
  storage:
    build:
      context: storagemock
      dockerfile: dockerfile
    environment:
      - USE_GITHUB_STORAGE
      - GITHUB_ORG
      - GITHUB_REPO
      - GITHUB_TOKEN
   
  frontend:
    build:
      context: .
      dockerfile: dockerfile.frontend
      args:
        - GITHUB_CLIENT_ID
        - GITHUB_ORG
        - GITHUB_REPO
        - AIRVIEW_HOST
        - AUTH_SCOPE
        - AUTH_CLIENT_ID
        - AUTH_AUTHORITY

  traefik:
    restart: always
    image: traefik
    volumes:
      - ./traefic/traefic.toml:/traefik.toml
      - ./traefic/traefic_dynamic.toml:/traefik_dynamic.toml
      - ./traefic/shared:/shared
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - auth

  auth:
    restart: always
    build:
      context: auth
      dockerfile: dockerfile
    environment:
      - TOKEN_AUDIENCE
      - TOKEN_ISSUER
      - TOKEN_KEYS_URI
